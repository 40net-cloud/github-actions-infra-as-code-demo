name: Ansible Deploy Azure

env:
  TFPath: Azure/

on:
  push:
    branches:
      - main
    paths:
    - 'Azure/**'
    - '!Azure/**.md'
  pull_request_target:
    branches:
      - main
    paths:
    - 'Azure/**'
    - '!Azure/**.md'
# To be reviewed: https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  workflow_dispatch:


jobs:
  Ansible:
    name: "Ansible"
    runs-on: ubuntu-latest
    env:
      TF_VAR_PREFIX: "FORTINET-1554562727-33"
      TF_VAR_LOCATION: "westeurope"
      TF_VAR_USERNAME: "azureuser"
      TF_VAR_PASSWORD: "${{ secrets.PASSWORD }}"
      TF_VAR_FLEXVM_API_USERNAME: "${{ secrets.FLEXVM_API_USERNAME }}"
      TF_VAR_FLEXVM_API_PASSWORD: "${{ secrets.FLEXVM_API_PASSWORD }}"
      TF_VAR_FLEXVM_PROGRAM_SERIAL: "${{ secrets.FLEXVM_PROGRAM_SERIAL }}"
      TF_VAR_FLEXVM_CONFIG_NAME: "${{ secrets.FLEXVM_CONFIG_NAME }}"
      TF_VAR_FLEXVM_VM_SERIAL: "${{ secrets.FLEXVM_VM_SERIAL }}"
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ env.TFPath }}

      - name: Terraform Output
        run: |
          terraform refresh
          terraform output -raw ansible_inventory > "/tmp/ansible-inventory"
          pwd
          ls -la /tmp/ansible-inventory
        working-directory: ${{ env.TFPath }}

      - name: Ansible config
        run: |
          pwd
          more /tmp/ansible-inventory
          ansible-playbook ansible/fgt.yaml -i /tmp/ansible-inventory
        working-directory: ${{ env.TFPath }}
