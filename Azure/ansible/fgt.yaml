- hosts: fgt
  collections:
  - fortinet.fortios
  connection: httpapi
  gather_facts: no
  vars:
   vdom: "root"
   ansible_httpapi_use_ssl: yes
   ansible_httpapi_validate_certs: no
   ansible_httpapi_port: 443
  tasks:
  - name: Transit network address
    fortios_firewall_address:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_address:
        name: "Transit"
        subnet: "172.27.40.64/26"
        type: "ipmask"
  - name: Configure dynamic backend address object
    fortios_firewall_address:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_address:
        name: "Backend"
        type: "dynamic"
        sdn: "azure"
        sdn_addr_type: "azure"
        filter: "Tag.type=websrv"
  - name: Configure dynamic Azure SQL address object
    fortios_firewall_address:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_address:
        name: "AzureSQL"
        type: "dynamic"
        sdn: "azure"
        sdn_addr_type: "azure"
        filter: "Region=westeurope | ServiceTag=Sql"
  - name: Configure Azure SQL Egress firewall policy
    fortios_firewall_policy:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_policy:
        policyid: 10
        name: "EgressAzureSQL"
        srcintf:
          - name: "port2"
        dstintf:
          - name: "port1"
        srcaddr:
          - name: "Backend"
        dstaddr:
          - name: "AzureSQL"
        action: accept
        schedule: "always"
        service:
          - name: "ALL"
        nat: enable
        logtraffic: "all"
        ips_sensor: "protect_client"
  - name: Configure Egress firewall policy
    fortios_firewall_policy:
      vdom:  "{{ vdom }}"
      state: "present"
      firewall_policy:
        policyid: 11
        name: "EgressAll"
        srcintf:
          - name: "port2"
        dstintf:
          - name: "port1"
        srcaddr:
          - name: "Backend"
        dstaddr:
          - name: "all"
        action: accept
        schedule: "always"
        service:
          - name: "ALL"
        nat: enable
        utm_status: "enable"
        av_profile: "default"
        logtraffic: "all"
        ssl_ssh_profile: "deep-inspection"
        dnsfilter_profile: "default"
        application_list: "block-high-risk"
        ips_sensor: "protect_client"
#  - name: Configure FortiGate Stitch Trigger
#    fortios_json_generic:
#      vdom:  "{{ vdom }}"
#      json_generic:
#        method: "POST"
#        path: "/api/v2/cmdb/system/automation-trigger"
#        jsonbody: |
#          {
#          "name": "RT-Trigger",
#          "event_type": "event-log",
#          "description": "Tag type with value websrv will update route table",
#          "logid": "53200",
#          "fields": "{id: 1, name:cfgobj, value:WebServer}"
#          }
#    register: info
#  - name: Configure FortiGate Stitch Action
#    fortios_system_automation_action:
#      vdom: "{{ vdom }}"
#      state: "present"
#      system_automation_action:
#        name: "RT-Action"
#        action_type: webhook
#        protocol: https
#        uri: "https://5ead174e-260d-424d-86a6-9329c00ea365.webhook.we.azure-automation.net/webhooks?token=wq0aQIZCpv0v5rf1IuhL27X6YN%2fQ%2bYPbrNmk30ZMCG8%3d"
#        http_body: "{\"action\":\"%%log.action%%\", \"addr\":\"%%log.addr%%\"}"
#        port: 443
#        headers:
#        - "ResourceGroupName:FORTINET-1554562727-33-RG"
#        - "RouteTableName:FORTINET-1554562727-33-RT-PROTECTED-A"
#        - "RouteTablePrefix:microseg"
#        - "NextHopIp:172.16.136.69"
